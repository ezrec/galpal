#!/usr/bin/perl

use strict;

package gal22v10;

sub type {
	return "22V10";
}

sub print_pins {
	print <<EOF ;
	input	[11:0]	I,
	inout	[9:0]	IOQ,
	input	VCC,
	input	GND
EOF
};

sub print_conn {
	print <<EOF ;
	.I(I),
	.IOQ(IOQ),
	.VCC(VCC),
	.GND(GND)
EOF
}

sub new {
	my $this = shift;
	my $class = ref($this) || $this;
	my $self = {};

	bless $self, $class;

	return $self;
}

package main;

sub read_jed {
	my ($file) = @_;

	my ($type, $fuselen);
	my ($fuse, $default, $i);

	$default = '1';
	open (JEDEC,"< $file") or die "Can't open $file: $!";

	while (<JEDEC>) {
		chomp $_;
		if ($_ =~ /^Device:\s*([^\s]*)\s*$/ ) {
			$type = $1;
			next;
		}
		if ($_ =~ /^\*F([0-1])$/ ) {
			$default = $1;
			next;
		}
		if ($_ =~ /^\*QF([0-9]*)$/ ) {
			$fuselen = $1;
			for ($i = 0; $i < $fuselen; $i++) {
				$fuse .= $default;
			}
			next;
		}
		if ($_ =~ /^\*L([0-9]*)\s+([01]*)$/ ) {
			substr $fuse, $1, length($2), $2;
			next;
		}
		if ($_ =~ /^F([0-1])\*.*$/ ) {
			$default = $1;
			next;
		}
		if ($_ =~ /^QF([0-9]*)\*.*$/ ) {
			$fuselen = $1;
			for ($i = 0; $i < $fuselen; $i++) {
				$fuse .= $default;
			}
			next;
		}
		if ($_ =~ /^L([0-9]*)\s+([01]*)\*.*$/ ) {
			substr $fuse, $1, length($2), $2;
			next;
		}
	}

	return ($type, $fuselen."'b".(scalar reverse $fuse));
}

sub main {
	my($name, $jed) = @_;
	my $class;

	my($type,$fuse) = read_jed($jed);
	if ($type =~ /[PG]AL22V10/) {
		$class = new gal22v10;
	} else {
		die "$type: Unknown JEDEC fusemap type";
	}

	$name =~ s/.*\///;
	$type = $class->type();

	print <<EOF ;
/* Autogenerated from $jed by galpal */

module $name (
EOF
	$class->print_pins();
	print <<EOF ;
);

galpal_$type #(
	.FUSE($fuse)
	) galpal (
EOF
	$class->print_conn();
	print <<EOF ;
);

endmodule
EOF
}

&main(@ARGV);
